# Stage 1: Modules caching
FROM golang:1.23.4 AS modules
WORKDIR /app
# Copy only module files for caching
COPY go.mod go.sum ./
RUN go mod download

# Stage 2: Builder
FROM golang:1.23.4 AS builder
COPY --from=modules /go/pkg /go/pkg
WORKDIR /app
# Copy source code
COPY . ./
# Install playwright cli with right version for later use
RUN PWGO_VER=$(grep -oE "playwright-go v\S+" /app/go.mod | sed 's/playwright-go //g') \
    && go install github.com/playwright-community/playwright-go/cmd/playwright@${PWGO_VER} \
    && go install github.com/air-verse/air@v1.61.5

# Stage 3: Development environment
FROM debian:bookworm-slim

# Prevent timezone prompt
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Copy necessary files from builder
COPY --from=builder /go/bin/playwright /usr/local/bin/playwright
COPY --from=builder /go/bin/air /usr/local/bin/air
COPY --from=builder /workdir /app
COPY --from=builder /usr/local/go /usr/local/go

WORKDIR /app

# Install minimal dependencies and let Playwright handle browser deps
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    # Install Chromium with all dependencies automatically
    && playwright install chromium --with-deps \
    # Remove playwright browsers except chromium
    && rm -rf /root/.cache/ms-playwright/firefox* \
    && rm -rf /root/.cache/ms-playwright/webkit* \
    # Cleanup
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /root/.npm/_cacache

# Set up Go environment
ENV GOPATH=/go
ENV PATH="/usr/local/go/bin:${GOPATH}/bin:${PATH}"

# Optional envs for storage (set via docker run -e)
# ENV SUPABASE_URL=
# ENV SUPABASE_SERVICE_KEY=
# ENV SUPABASE_STORAGE_BUCKET=screenshots

EXPOSE 8081

CMD ["air", "-c", ".air.toml"]
